name: Snyk Code Test

on:
  workflow_call:
    secrets:
      SNYK_TOKEN:
        required: true

jobs:
  snyk_code_test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Install node-jq
      run: npm install node-jq

    - name: Install Snyk CLI
      run: npm install -g snyk

    - name: Authenticate Snyk CLI
      run: snyk auth ${{ secrets.SNYK_TOKEN }}

    - name: Run Snyk Code Test
      run: |
        snyk code test --all-projects --severity-threshold=high --json > snyk-results.json || true
        if [ -s "snyk-results.json" ]; then
          echo "VUL_FOUND=true" >> $GITHUB_ENV
        else
          echo "VUL_FOUND=false" >> $GITHUB_ENV
        fi
        
    - name: Post vulnerabilities in comments
      if: env.VUL_FOUND == 'true'
      uses: actions/github-script@v5
      with:
        script: |
          const fs = require('fs');
          const highSeverityVulnerabilities = fs.readFileSync('snyk-results.json', 'utf8');
          const vulnerabilities = JSON.parse(highSeverityVulnerabilities);
          const filteredData = vulnerabilities.runs[0].results.map(result => ({
            Vulnerability: result.ruleId,
            Info: result.message.text,
            Path: result.locations[0].physicalLocation.artifactLocation.uri,
            Line: result.locations[0].physicalLocation.region.startLine
          }));
          const issueComment = `**Snyk found the following high severity vulnerabilities:**\n\n\`\`\`\n${JSON.stringify(filteredData, null, 2)}\n\`\`\``;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: issueComment
          });

    - name: Fail CI check if high severity vulnerabilities are detected
      run: exit 1
      if: env.VUL_FOUND == 'true'
